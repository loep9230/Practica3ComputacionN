// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using config_infraestructura;

#nullable disable

namespace config_infraestructura.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20251030024602_three")]
    partial class three
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("config_domain.Entornos", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("name");

                    b.ToTable("Entornos");
                });

            modelBuilder.Entity("config_domain.Variables", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("name_entorno")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("is_sensitive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("name", "name_entorno");

                    b.HasIndex("name_entorno");

                    b.ToTable("Variables");
                });

            modelBuilder.Entity("config_domain.Variables", b =>
                {
                    b.HasOne("config_domain.Entornos", null)
                        .WithMany()
                        .HasForeignKey("name_entorno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
